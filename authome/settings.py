"""
Django settings for authome project.

Generated by 'django-admin startproject' using Django 1.9.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

from unipath import Path
from boto.ses import SESConnection
from datetime import timedelta
from celery.schedules import crontab

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).ancestor(2)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['AUTHOME_SECRET_KEY']
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = ['*']
LOGIN_REDIRECT_URL = '/'


# ### 이메일 설정

EMAIL_BACKEND = 'django_ses.SESBackend'
AWS_SES_REGION_NAME = os.environ['AWS_SES_REGION_NAME']
AWS_SES_REGION_ENDPOINT = os.environ['AWS_SES_REGION_ENDPOINT']
AWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']
AWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']
AWS_SES_RETURN_PATH = 'xncbf12@gmail.com'
SERVER_EMAIL = 'xncbf12@gmail.com'
DEFAULT_FROM_EMAIL = 'noreply@autho.me'
SESConnection.DefaultRegionName = AWS_SES_REGION_NAME
SESConnection.DefaultRegionEndpoint = AWS_SES_REGION_ENDPOINT
# AWS_SES_AUTO_THROTTLE = 1.0  # 속도 조절 (초당 갯수)


#### celery 설정
BROKER_URL = 'amqp://guest:guest@localhost:5672//'
CELERY_IMPORTS = ('authome.tasks', )
CELERY_RESULT_BACKEND = 'amqp://'

# CELERY_ANNOTATIONS = {'authome.tasks.get_ses_statistics': {'rate_limit': '10/s'}}
CELERYBEAT_SCHEDULE = {
    'get_ses_statistics': {
        'task': 'authome.tasks.get_ses_statistics',
        'schedule': timedelta(days=1),
    },
    'verify_end_yn': {
        'task': 'authome.tasks.verify_end_yn',
        "schedule": timedelta(seconds=30),
    },
    'celery.backend_cleanup': {
        'task': 'celery.backend_cleanup',
        "schedule": crontab(minute='0'),
    }
}


# allauth 설정
ACCOUNT_AUTHENTICATION_METHOD ="email"
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_USERNAME_BLACKLIST = ["운영자", "관리자", "admin"]
ACCOUNT_USERNAME_REQUIRED = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',
    'django.contrib.sitemaps',
    'django_ses',
    'admin_honeypot',
    'rest_framework_docs',
    'rest_framework',
    'subdomains',
    'main',
    'api',
    'api_macro',
    'docs',
    'board',
    'log',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.kakao',
    'allauth.socialaccount.providers.naver',
    'django_celery_beat',
    'django_comments',
    'hitcount',
    'markdown_deux',
    'material',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'PAGE_SIZE': 100,
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/minute',
        'user': '100/minute'
    }
}

REST_FRAMEWORK_DOCS = {
    'HIDE_DOCS': False
}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'subdomains.middleware.SubdomainURLRoutingMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SITE_ID = 2
ROOT_URLCONF = 'api.urls'
SUBDOMAIN_URLCONFS = {
    None: 'authome.urls',  # no subdomain, e.g. ``example.com``
    'www': 'authome.urls',
    'api': 'api.urls',
    'docs': 'docs.urls',
}
SESSION_COOKIE_DOMAIN = '.autho.me'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['AUTHOME_DATABASE_NAME'],
        'USER': os.environ['AUTHOME_DATABASE_USER'],
        'PASSWORD': os.environ['AUTHOME_DATABASE_PASSWORD'],
        'HOST': os.environ['AUTHOME_DATABASE_HOST'],
        'PORT': os.environ['AUTHOME_DATABASE_PORT'],
    }
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR.child('templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

WSGI_APPLICATION = 'authome.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR.child('static')

MEDIA_URL = '/images/'
MEDIA_ROOT = BASE_DIR.child('media')
